@ 배열의 정의
- 변수라는 값으로 데이터를 저장하려면 메모리 안에서 연속적으로 값을 삭제하고 다시 추가한다.
자료형 변수를 지정하여서 여러 데이터를 담을 수 있는 구조를 자료 구조(data structure)라고 한다.

1) 배열을 선언하는 방법

int arr1 = 0;
int arr2 = 0;
int arr3 = 0;
int arr4 = 0;
int arr5 = 0;

=> int arr1 = {1, 2, 3, 4, 5};
* 하나의 자료형으로 선언해서 배열을 만든다.

자료형 [] 배열 이름 = int [] arr;
자료형 배열 이름[] = int arr;
* 자료형 뒤에 붙이고 변수명 뒤에 붙여도 된다
배열이라는 의미로 선언되려면 가독성 높이는 방법 때문에 자료형 뒤에 선언하는 것을 선호

- 기본 자료형
int long = 0
float double = 0.0

- 참조 자료형
자료형[] 변수 이름 = null; // 공간이 존재하지 않는다

2) 배열의 선언과 생성
- 배열을 선언하는것은 배열을 다루는 참조변수 공간만 만들어진 것이다.
저장할 수 있는 공간을 만드려면 생성해야된다.

* 배열을 선언하는 방법

int [배열연산자] arr = new int [배열크기];

* 배열 선언하고 생성할 때 오류
int [] arr; // 배열 변수 선언
arr = {1, 2, 3, 4 ,5}; // 오류 발생

* 배열은 선언 즉시 생성해야 한다.

* 배열 선언하고 재정의 방법
int [] arr;
arr = new int[] {1, 2, 3 ,4 , 5}; // 배열 재정의 -> 오류 발생 x

3) 배열의 메모리 구조
int [] arr = new int[5];
-> 참조변수라서 주소를 출력하면 배열의 위치가 주소값으로 출력된다.

일반변수 : 데이터를 직접 갖고오는 변수
(short/byte/int/double)

참조변수 : 데이터 위치가 주소값을 가지는 변수로 해당 주소를 접근해서 갖고온다.
(String / 배열 / collections / 객체(object))

4) 배열의 특징
- 배열 선언 후 공간의 크기를 늘리거나 삭제할 수 없다.
- 배열 선언 시 크기를 지정한다.
(배열의 크기 넣기 / 배열을 선언 즉시 생성)
- 자료형 값만 저장할 수 있다.

@ 배열의 구조

1) 인덱스 : 배열의 각 공간의 위치값을 말한다.
배열이 지나다니는 위치 -> 인덱스(index)
공간을 숫자로 표현(0부터 시작)
공간의 값을 가져오는 의미는 공간의 첨자를 부여해서 사용한다.

2) 배열의 길이 : 배열의 변수가 할당된 크기
배열의 길이를 알고 싶을때 length함수 사용
arr.length

3) 배열의 초기값 : 선언을 했을 때 자동으로 지정되는 초기값
정수형 : 0
실수형 : 0.0
문자형 : ' '
객체형 : null

@ Array(배열 출력/배열 정렬/배열 복사)

배열을 간단하게 활용하는 방법을 도와주는 클래스
- 배열을 출력 : Arrays.toString(배열);
간단하게 배열의 값을 볼 수 있는 방법이다.

- 배열의 정렬 (오름차순 / 내림차순)
오름차순 : 작은 값부터 차례대로 정렬
내림차순 : 큰 값부터 차례대로 정렬
Arrays.sort(배열);

- 배열의 복사 (얕은 복사 / 깊은 복사)
1. 얕은 복사(shallow copy)
복사된 배열이나 원본 배열이 변경될 때 서로 간의 값이 변경된다.
int [] arr = {1, 2, 3}
int [] arr1 = arr;

2. 깊은 복사(deep copy)
복사된 배열이나 원본 배열이 변경될 때 서로 간의 값은 변경되지 않는다.
1) 복사할 배열 선언 방법
int [] arr = {1, 2, 3};
int [] newarr = new int[arr.length];

2) Arrays.copyof(배열의 이름, 배열의 길이)
* 전체의 배열을 그대로 복사한 형태


3) System 함수 사용
System.arrayCopy(원본, 1, 복사본, 1, 배열의 크기)
* 부분 복사를 깊은 형태로 새로운 배열을 생성해서 만들 수 있다.
(원본 지장 없음/크기를 사용자 정의)


@ 다차원 배열
1) 2차원 배열 선언
2차월 배열은 행은 독립된 공간으로 분리되어 사용된다.
행마다 독립된 별도의 배열공간을 가진다.

1. 2차원 배열의 기본 선언 방법
int [][] = new int [행의 크기][열의 크기];

2. 2차원 배열의 열 지정 삭제 방식
int [][] arr = new int [행의 크기][] (좋은방법)
int [][] arr = new int [][열의 크기] (나쁜방법)


@ 향상된 for문
jdk 1.5부터 새롭게 추가된 기능으로 배열과 컬렉션의 모든 요소를 참조(python)

@ 클래스 정리
@ 연습문제_교재숙제
