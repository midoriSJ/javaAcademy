@반복문

- 반복문은 프로그램 코드 안에서 반복적인 명령(패턴)을 수행하는 제어 프로그램이다.
- 반복적으로 코드의 개수만큼 출력하는 것이 아니라 출력하는 만큼의 단위를
관계연산자의 조건으로 처리를 해준다면 조건만큼 제어하면서 코드를 출력할 수 있다.

@반복문의 종류
- for문
1) 조건을 만족하는 동안 블록{} 반복한다
2) 반복 횟수를 알아야 동작한다.
3) 표현 방법
=> for (int i = 1; i <= 5; i++){
	// i를 1로 지정, i가 5가 될 때까지 한번씩 증가시키면서 코드 실행
	System.out.println(i); 	=>  for문 안의 조건 만족할때까지 반복
	
	(출력값)
	//1 = 초기값
	//2
	//3
	//4
	//5
}
	1. 초기화식 : 최초 실행 시 시작값을 부여하는 방법
	
	2. 조건식 : 반복문의 반복수행여부(= true)를 확인하는 방식이다.
	=> 조건이 참이면 계속 반복
	
	3. 실행식 : 반복문이 수행되어야 할 명령문이다.
	
	4. 증감식 : 반복문 수행 시 마지막 초기값을 증가하거나 감소시킨다.
	
* for문 다양한 표현 방법
1) for( ; ; ) : 조건식이 항상 true : 무한반복 가능
2) for(int i = 1; i <= 10; i++){..} : 1씩 증가
3) for(int i = 1; i <= 10; i--){..} : 1씩 감소
4) for(int i = 1; i <= 10; i+=2){..} : 2씩 증가
5) for(int i = 1; i <= 10; i*=3){..} : 3배씩 증가

6) for문 실습문제
1. for문을 이용해서 1부터 5까지 출력하자.
(결과값)
1
2
3
4
5
12345

답)
for(int i = 1; i <= 5; i++) {
	System.out.println(i);	// 한 줄씩 출력(println)
}
for(int j = 1; j <= 5; j++) {
	System.out.print(j);		// 한 줄에 한번에 출력(print)
}

2. 1부터 5까지 숫자 중 하나를 출력
답)
for(int i = 1; i <= 5; i++){
	int value = (int)(Math.random()*5)+1;	//Math.random() => 난수 생성 함수
	System.out.println(value);		//*5	          => 숫자 범위
}

3. 1부터 100까지 반복하고 숫자 중 짝수의 합계를 구해보자
조건 1) for문을 2개씩 증가해서 만들 수 있다.
조건 2) if 조건문으로 2로 나누면 나머지가 0일 경우 짝수라고 판단

조건 1 답)
int sum = 0;
		
for(int i = 0; i <= 100; i+=2) {	   // 0부터 2씩 증가하면 i가 짝수만 저장되므로
	sum += i;		   // 그대로 sum에 누적시키면 된다.
}
System.out.println(sum);	   // sum(합계값) 출력

조건 2 답)
int sum = 0;

for(int i = 1; i <= 100; i+=1) {	   // i가 1부터 1씩 증가하게 되면 홀수(3, 5, 7, ...)도 나오므로
	if(i % 2 == 0) {	   // i가 증가하는 동안 짝수인 조건 (2로 나누었을 때 나머지가 0) 일 때
		sum += i;	   // 조건에 충족하면 합계에 누적
	}
}
System.out.println(sum);	   // sum(합계값) 출력

	
- 중첩 for문
1) for문 안에 for문을 포함시킨것이 가능
(외부 for문 > 내부 for문)

for(int i = 2; i <= 9; i++){		// 내부 for문이 다 끝날 때 까지 i는 2에서 stop
	for(int j = 1; j <= 9; j++){	// j는 1부터 9까지 증가 중
		
	}
}

2) 내부 for문이 끝나야 외부 for문이 증가한다
3) 구구단을 구하면 알 수 있다!
4) 중첩 for문 실습문제

1. 1차 반복문(for문을 1개만 이용) 구구단 2단을 코드로 만들어보자.

답)

for(int i = 1; i <= 9; i++) {				// i가 1부터 9까지 반복
	System.out.printf("2 * %d = %d\n", i, i*2);	// 2 * i = 2*i 형식으로 출력
}

출력 결과)
2 * 1 = 2
2 * 2 = 4
2 * 3 = 6
2 * 4 = 8
2 * 5 = 10
2 * 6 = 12
2 * 7 = 14
2 * 8 = 16
2 * 9 = 18

2. 중첩 반복문(for문을 2개 이용)하여 구구단 2단부터 9단까지 코드로 만들어보자

답) => 코드 복사해서 출력해보셔도 됩니다!
for(int i = 2; i <= 9; i++){					// 외부 for문(n x 1, n x 2의 n 2부터 9까지 증가 기능)
	System.out.printf("\n### %d단 ###\n\n", i);		// 가독성 위해 각 단 별로 분리
	for(int j = 1; j <= 9; j++) {				// 내부 for문(2 x n, 3 x n의 n 1부터 9까지 증가 기능)
		System.out.printf("%d x %d = %d\n", i, j, i*j);
	}
}

출력 결과)

### 2단 ###

2 x 1 = 2
2 x 2 = 4
2 x 3 = 6
2 x 4 = 8
2 x 5 = 10
2 x 6 = 12
2 x 7 = 14
2 x 8 = 16
2 x 9 = 18

### 3단 ###

3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27

### 4단 ###

4 x 1 = 4
4 x 2 = 8
4 x 3 = 12
4 x 4 = 16
4 x 5 = 20
4 x 6 = 24
4 x 7 = 28
4 x 8 = 32
4 x 9 = 36

### 5단 ###

5 x 1 = 5
5 x 2 = 10
5 x 3 = 15
5 x 4 = 20
5 x 5 = 25
5 x 6 = 30
5 x 7 = 35
5 x 8 = 40
5 x 9 = 45

### 6단 ###

6 x 1 = 6
6 x 2 = 12
6 x 3 = 18
6 x 4 = 24
6 x 5 = 30
6 x 6 = 36
6 x 7 = 42
6 x 8 = 48
6 x 9 = 54

### 7단 ###

7 x 1 = 7
7 x 2 = 14
7 x 3 = 21
7 x 4 = 28
7 x 5 = 35
7 x 6 = 42
7 x 7 = 49
7 x 8 = 56
7 x 9 = 63

### 8단 ###

8 x 1 = 8
8 x 2 = 16
8 x 3 = 24
8 x 4 = 32
8 x 5 = 40
8 x 6 = 48
8 x 7 = 56
8 x 8 = 64
8 x 9 = 72

### 9단 ###

9 x 1 = 9
9 x 2 = 18
9 x 3 = 27
9 x 4 = 36
9 x 5 = 45
9 x 6 = 54
9 x 7 = 63
9 x 8 = 72
9 x 9 = 81


* 응용 ( 19 * 19 구구단 만들기) => 중첩반복문 이해하시기 쉽게 예시 하나 만들었습니다.
=> 중첩 for문 이용

답) => 코드 복사해서 출력해보셔도 됩니다!
for(int i = 2; i <= 19; i++){					// 내부 for문 끝날 때 까지 정지
	System.out.printf("\n### %d단 ###\n\n", i);		// 가독성 위해 각 단 별로 분리
							// 내부 for문 끝날 시(2*1 ~ 2*19 끝날 시) 1 증가
	for(int j = 1; j <= 19; j++) {				// 1부터 19까지 증가
		System.out.printf("%d x %d = %d\n", i, j, i*j);	// 2 * 1부터 19 * 19까지의 구구단 출력
	}
}

출력 결과)

2 x 1 = 2
2 x 2 = 4
2 x 3 = 6

...

19 x 17 = 323
19 x 18 = 342
19 x 19 = 361


3. 여러 가지 별코드 찍어보기
1) for문 하나만 이용하여 별 찍어보기
답) => 코드 복사해서 출력해보셔도 됩니다!
for(int a = 1; a <= 1; a++) {		// 별을 1개 찍는 for문
	System.out.print("*");	// 줄바꿈
}
System.out.println();
for(int a = 1; a <= 2; a++) {		// 별을 2개 찍는 for문
	System.out.print("*");	// 줄바꿈	
}
System.out.println();
for(int a = 1; a <= 3; a++) {		// 별을 3개 찍는 for문
	System.out.print("*");	// 줄바꿈
}
System.out.println();
for(int a = 1; a <= 4; a++) {		// 별을 4개 찍는 for문
	System.out.print("*");	// 줄바꿈
}
System.out.println();
for(int a = 1; a <= 5; a++) {		// 별을 5개 찍는 for문
	System.out.print("*");	// 줄바꿈
}


출력 결과)
*
**
***
****
*****

2) 중첩 for문을 이용하여 별 찍기

답) => 코드 복사해서 출력해보셔도 됩니다!

for(int i = 1; i <= 5; i++) {			// 내부 for문 끝날때까지 stop => 내부 for문 끝날 시 1 증가
	for(int j = 1; j <= i; j++) {		// j가 i일 때 까지 조건을 걸어줌으로써 for문이 끝날 때 마다
					   1, 2, 3, 4, 5까지 범위가 증가되도록 함
		System.out.print("*");	// j가 1일 땐 1개, 2일 땐 2개, ... , 5일땐 5개 출력되도록 함
	}
	System.out.println();			// 내부 for문 끝날 때 마다 줄 바꿈
}
		

출력 결과)
*
**
***
****
*****

2-1) 중첩 for문을 이용하여 별 찍기

답) => 코드 복사해서 출력해보셔도 됩니다!
for(int i = 1; i <= 5; i++) {			//  i는 1부터 5까지 증가
	for(int j = 5; j >= i; j--) {		//  j는 5부터 1까지 감소
					// i와 j가 중첩되면서 별의 개수 감소
		System.out.print("*");	
	}
	System.out.println();
}

출력 결과)
*****
****
***
**
*



- while문



- do-while문




@continue
@break
@break와 continue
@이름 붙는 반복문

@연습문제-반복문(응용문제)

